name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    environment:
      name: testing

    env:
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_NAME_Test: ${{secrets.DATABASE_NAME_Test}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{secrets.DATABASE_USERNAME}}
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 && break
            sleep 2
          done

      - name: Create main and test databases
        run: |
          psql -h localhost -U ${{secrets.DATABASE_USERNAME}} -d postgres -c "CREATE DATABASE ${{secrets.DATABASE_NAME}};"
          psql -h localhost -U ${{secrets.DATABASE_USERNAME}} -d postgres -c "CREATE DATABASE ${{secrets.DATABASE_NAME_Test}};"
        env:
          PGPASSWORD: ${{secrets.DATABASE_PASSWORD}}

      - name: Run tests
        run: pytest
